[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "metriqx"
dynamic = ["version"]
description = 'Application performance tracking library'
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE.txt"}
keywords = ["FastAPI", "Prometheus", "Metrics", "Performance Monitor"]
authors = [{ name = "Andrew Kariuki", email = "andrew.o.kariuki@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Framework :: FastAPI",
  "Framework :: AsyncIO",
  "Framework :: Pydantic",
  "Framework :: Pydantic :: 2",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Internet",
  "Typing :: Typed",
]
dependencies = [
    "fastapi>=0.111.0",
    "flask>=3.0.3",
    "prometheus-client>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/andrewkariuki/metriqx"
Documentation = "https://github.com/andrewkariuki/metriqx#readme"
Funding = 'https://github.com/sponsors/andrewkariuki'
Issues = "https://github.com/andrewkariuki/metriqx/issues"
Source = "https://github.com/andrewkariuki/metriqx"

[tool.hatch]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
include = [
  "/metriqx/**/*.py",
  "/metriqx/py.typed",
]
artifacts = []

[tool.hatch.version]
source = "regex_commit"
commit_extra_args = ["-e"]
path = "metriqx/__init__.py"

[tool.hatch.envs.default]
installer = "uv"
python = "3.12"
dependencies = [
  "beautifulsoup4",
  "coverage[toml]",
  "gevent",
  "mypy",
  "pytest",
  "pytest-cov",
  "pytest-asyncio",
  "pytest-mock",
  "pytest-xdist",
  "ruff",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args}"
test-cov-xml = "pytest --cov metriqx/ --cov-report=xml --exitfirst"
lint = [
  "ruff format .",
  "ruff check --fix .",
  "mypy metriqx/",
]
lint-check = [
  "ruff format --check .",
  "ruff check .",
  "mypy metriqx/",
]

[tool.mypy]
strict = true
plugins = 'pydantic.mypy'

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:metriqx tests}"

[tool.coverage.run]
source_pkgs = ["metriqx", "tests"]
branch = true
parallel = true
omit = [
  "metriqx/__init__.py",
]

[tool.coverage.paths]
metriqx = ["metriqx", "*/metriqx/metriqx"]
tests = ["tests", "*/metriqx/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
extend-select = ["I", "TRY", "UP"]
ignore = ["E501"]
per-file-ignores = { "conftest.py" = ["E731"], "tests/*" = ["TRY"], "swa_bert/repositories/*" = ["E711", "E712"], "swa_bert/alembic/*" = ["F401"]}

[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
filterwarnings = [
    'error',
    'ignore::DeprecationWarning',
]

[tool.codespell]
skip = '.git,env*,__pycache__,.venv'
ignore-words-list = 'ines,ser'
